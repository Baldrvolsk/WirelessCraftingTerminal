package net.p455w0rd.wirelesscraftingterminal.transformer;

import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.annotation.Nullable;

import com.google.common.collect.Lists;
import com.google.common.eventbus.EventBus;

import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.LoadController;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.relauncher.FMLRelaunchLog;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin.MCVersion;
import cpw.mods.fml.common.versioning.ArtifactVersion;
import cpw.mods.fml.common.versioning.VersionParser;
import net.p455w0rd.wirelesscraftingterminal.reference.Reference;



@MCVersion( "1.7.10" )
public final class WCTCore extends DummyModContainer implements IFMLLoadingPlugin
{
	private final ModMetadata metadata = new ModMetadata();

	public WCTCore()
	{
		FMLRelaunchLog.info( "[WCT] Core Init" );
		this.metadata.autogenerated = false;
		this.metadata.authorList.add( "p455w0rd" );
		this.metadata.credits = "AlgorithmX2";
		this.metadata.modId = this.getModId();
		this.metadata.version = this.getVersion();
		this.metadata.name = this.getName();
		this.metadata.url = "http://p455w0rd.net/mc";
		this.metadata.description = "Embedded Coremod for Wireless Crafting Terminal";
		this.metadata.autogenerated = false;
		this.metadata.dependencies=this.getDependencies();
		this.metadata.requiredMods=this.getRequirements();
	}

	@EventHandler
	public void load( final FMLInitializationEvent event )
	{
	}
	
	@Override
	public List<ArtifactVersion> getDependencies()
	{
		List<ArtifactVersion> deps = Lists.newArrayList();
		deps.add(VersionParser.parseVersionReference("appliedenergistics2-core"));
		return deps;
	}
	
	@Override
    public Set<ArtifactVersion> getRequirements()
    {
		Set<ArtifactVersion> reqDeps = new HashSet<ArtifactVersion>();
		reqDeps.add(VersionParser.parseVersionReference("appliedenergistics2-core"));
		return reqDeps;
    }


	@Override
	public String[] getASMTransformerClass()
	{
		return null;
	}

	@Override
	public String getModContainerClass()
	{
		return "net.p455w0rd.wirelesscraftingterminal.transformer.WCTCore";
	}

	@Nullable
	@Override
	public String getSetupClass()
	{
		return null;
	}

	@Override
	public void injectData( final Map<String, Object> data )
	{

	}

	@Override
	public String getAccessTransformerClass()
	{
		return "net.p455w0rd.wirelesscraftingterminal.transformer.asm.ASMIntegration";
	}
	
	@Override
	public ModMetadata getMetadata()
	{
		return this.metadata;
	}

	@Override
	public String getModId()
	{
		return "wct-core";
	}

	@Override
	public String getName()
	{
		return "Wireless Crafting Terminal Core";
	}

	@Override
	public String getVersion()
	{
		return Reference.VERSION;
	}

	@Override
	public boolean registerBus( final EventBus bus, final LoadController controller )
	{
		return true;
	}

	@Override
	public String getDisplayVersion()
	{
		return this.getVersion();
	}
}
